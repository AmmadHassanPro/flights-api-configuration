spring:
  config:
    activate:
      on-profile: dev
  security:
    oauth2:
      client:
        provider:
          authProvider:
            token-uri: 'https://test.api.amadeus.com/v1/security/oauth2/token'
        registration:
          authProvider:
            client-id: '${CLIENT_ID}'
            client-secret: '${CLIENT_SECRET}'
            authorization-grant-type: client_credential
amadeus:
  base: 'https://test.api.amadeus.com/'
  airport-and-city-endpoint: 'v1/reference-data/locations?subType=CITY,AIRPORT&keyword='
  flight-offers-endpoint: 'v2/shopping/flight-offers'
  max-number-of-flights: '10'

logging:
  level:
    com.atombooking.flightsapi: DEBUG
  file:
    path: logs
  pattern:
    file: '%d{HH:mm:ss.SSS} | uuid: %X{request-uuid} , consumer: %X{consumer-name} | [%thread] %-5level %logger{36} - %msg%n'
    
atombooking:
  open-api-spec:
    dev-url: http://localhost:8080
    prod-url: http://localhost:8080


---
spring:
  config:
    activate:
      on-profile: dev
  security:
    oauth2:
      client:
        provider:
          authProvider:
            token-uri: 'https://api.amadeus.com/v1/security/oauth2/token'
        registration:
          authProvider:
            client-id: '${CLIENT_ID}'
            client-secret: '${CLIENT_SECRET}'
            authorization-grant-type: client_credential
amadeus:
  base: 'https://api.amadeus.com/'
  airport-and-city-endpoint: 'v1/reference-data/locations?subType=CITY,AIRPORT&keyword='
  flight-offers-endpoint: 'v2/shopping/flight-offers'
  max-number-of-flights: '50'
  
logging:
  level:
    com.atombooking.flightsapi: INFO
  file:
    path: logs
  pattern:
    file: '%d{HH:mm:ss.SSS} | uuid: %X{request-uuid} , consumer: %X{consumer-name} | [%thread] %-5level %logger{36} - %msg%n'
    
atombooking:
  open-api-spec:
    dev-url: http://localhost:8080
    prod-url: http://atombooking.com
